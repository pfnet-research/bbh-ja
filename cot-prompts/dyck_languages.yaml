- input: '括弧が正しく閉じられるように、残りのテキストを完成させてください。入力: [ { ['
  target: '順を追って考える。各入力を1つずつ処理し、スタックの状態を追跡する必要があります。

    0: 空のスタック

    1: [ ; スタック: [

    2: { ;  スタック: [ {

    3: [ ;  スタック: [ { [

    ここで処理が終了しました。最終的なスタックの状態は「[ { [」です。

    この順序で「[」「{」「[」を1つずつポップする必要があります。

    したがって、必要な文字は「]」「}」「]」です。答えは「] } ]」'
  answer: '] } ]'
- input: '括弧が正しく閉じられるように、残りのテキストを完成させてください。入力: < > ( ( [ [ ( { } ) [ < > ] ]'
  target: '順を追って考える。各入力を1つずつ処理し、スタックの状態を追跡する必要があります。

    0: 空のスタック

    1: < ;  スタック: <

    2: > ;  スタック: 空

    3: ( ;  スタック: (

    4: ( ;  スタック: ( (

    5: [ ;  スタック: ( ( [

    6: [ ;  スタック: ( ( [ [

    7: ( ;  スタック: ( ( [ [ (

    8: { ;  スタック: ( ( [ [ ( {

    9: } ;  スタック: ( ( [ [

    10: ) ;  スタック: ( ( [ [

    11: [ ;  スタック: ( ( [ [ [

    12: < ;  スタック: ( ( [ [ [ <

    13: > ;  スタック: ( ( [ [ [

    14: ] ;  スタック: ( ( [ [

    15: ] ;  スタック: ( ( [

    ここで処理が終了しました。最終的なスタックの状態は「( ( ["です。

    この順序で「[」「(」「(」を1つずつポップする必要があります。

    したがって、必要な文字は「]」「)」「)」です。答えは「] ) )」'
  answer: '] ) )'
- input: '括弧が正しく閉じられるように、残りのテキストを完成させてください。入力: < [ < [ { < [ ] < { } > > } ] > { {
    ( ) } { < [ < > ] > }'
  target: '順を追って考える。各入力を1つずつ処理し、スタックの状態を追跡する必要があります。

    0: 空のスタック

    1: < ;  スタック: <

    2: [ ;  スタック: < [

    3: < ;  スタック: < [ <

    4: [ ;  スタック: < [ < [

    5: { ;  スタック: < [ < [ {

    6: < ;  スタック: < [ < [ { <

    7: [ ;  スタック: < [ < [ { < [

    8: ] ;  スタック: < [ < [ { <

    9: < ;  スタック: < [ < [ { < <

    10: { ;  スタック: < [ < [ { < < {

    11: } ;  スタック: < [ < [ { < <

    12: > ;  スタック: < [ < [ { <

    13: > ;  スタック: < [ < [ {

    14: } ;  スタック: < [ < [

    15: ] ;  スタック: < [ <

    16: > ;  スタック: < [

    17: { ;  スタック: < [ {

    18: { ;  スタック: < [ { {

    19: ( ;  スタック: < [ { { (

    20: ) ;  スタック: < [ { {

    21: } ;  スタック: < [ {

    22: { ;  スタック: < [ { {

    23: < ;  スタック: < [ { { <

    24: [ ;  スタック: < [ { { < [

    25: < ;  スタック: < [ { { < [ <

    26: > ;  スタック: < [ { { < [

    27: ] ;  スタック: < [ { { <

    28: > ;  スタック: < [ { {

    29: } ;  スタック: < [ {

    ここで処理が終了しました。最終的なスタックの状態は「< [ {」です。

    この順序で「{」「[」「<」を1つずつポップする必要があります。

    したがって、必要な文字は「}」「]」「>」です。答えは「} ] >」'
  answer: '} ] >'
